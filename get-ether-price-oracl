// SPDX-License-Identifier: MIT
pragma solidity ^0.8.18;

import "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol";

contract EtherPriceConsumer {
    AggregatorV3Interface internal priceFeed;

    constructor() {
        // Mainnet address for ETH/USD aggregator
        priceFeed = AggregatorV3Interface(
            0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada
        );
    }

    function getLatestEtherPrice() public view returns (uint256) {
        (, int256 price, , , ) = priceFeed.latestRoundData();
        require(price > 0, "Invalid price"); 
        uint256 ethPriceInUSD = uint256(price); 
        uint256 ethPriceInUSD18Decimals = ethPriceInUSD * (10 ** 10);

        return ethPriceInUSD18Decimals;
    }
}


//mumbai testnet geth ether price in wei
//You can convert next then in to any value its rounded value might me it will alwasy grater then live value.

//mumbai test net deployed contract address 0xfEEB142aE58E961425370A79C1F12E4BCE4Dcc54
